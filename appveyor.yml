version: 2.0.{build} 
image: 
  - Ubuntu

branches:
  only:
    - development
environment:
  ENV_FILE:
    secure: 1EY0PW6l+4E/ZiuaRlC8WHb8v2J6o+YWksH852D5wIVfRnWBC6Ih6bPQMSwQ1Smm71oEOrsd8WJsabgdIkZIxinJ4chtLNBEjx2Wm32JuQziI+jvxc+Q+9YUtwrijB6xP2jHPA0n5wLEE1yHiicn6FFTFcXMJnOpizKcVkU9CgAywwJC+hXp17Vmp96jkfoDSf3duGS/2qmsUsDQwj6xPOBSHoE03YZ54QvknBZBf1gN2nJV+c/z06OSkXEyiQInB37EdUQcm54+0ut3C2DiAJbZkB60fotkUvw8RQWDubDIsfUfN7X9pTr7Z22twEtD3IxU2QmPntZKvQ97eYzpjDtCg3MhNqQhjtHbU5s+jKbHZ8AHTMc+UybbnYUr8ZVH5yGQe9xplPDMWps6PcUt5u5MwD7Fr+V64ujpnTsX8lry4pmdAz7mqktYNMeUJ7Q4wbu+y0W/NE2MwqlauwcoI5mFLMvQK0cV7ge3Y3qLA35G5tIH0gYvOkb+2p/SM3K9zhFMQbuw/8JzCbWsLCIa6SqRJfa5HFBvFwwqur1ffW5UejTS8eMtFtCGH+E+kOERdvOwhCxdArEuscpGLrKfJu84B3+jiSscDbM1C++y2FvOKaFWnatPBjN+OWT7Yr+C6cIHkw6AmRkOhVBFlE/N39mI//+sgzQsKwhZR3Y4kHjvxtDGttgcB3xXBYk6t7kdRc5+jNY4fC7sQiRJ/jhpIcGn+ivRp7cOzTu8mO05L1CUpTLkhqvArrlvbgrNscHAOuVXtDxfboOpW3ebi7p7lUiZctUxOPasuNBF3wRix6Ovc2dDIE4Ll2llaXcL/IjWyWH5KLleonpqkU+IhZDmT5e9LVzO05CSxqVBKmWO0sifO8XhbEXfpKTDcoLEBcBHkA8ii8qqgCW4BcyhUCFppxQHNkZE2ntxjFMJUqM16M4=
  DOCKER_USER:
    secure: CbwbpNPxLV9AwhjSpIz7LA==
  DOCKER_PASS:
    secure: /T9ITfudL23Ga+Mz7oRaVA==
  WORKBENCH_ENVIRONMENT:
    secure: /0UAqpwPkUwhtSS6lpKMBHZ8ljEtyTr5h3VPFqsliGLsVg8u/WLCPcwPpJOm1xpglFrEuY5lQc9ekyZ4BS6PB3rL5hfhvI1+T0zD9EMIaN+1Uo9AGU3Dc6PFzeaxT3oZBBRgzdsHeOaicVhgai6xOexBtPEZzWfXDYtxjOfybV4BmFA/hk7u7RCnkRodG6z2IiCUmXYIQbxOLyKDfbVOUVbqnYlPoYdzcZY95h2yyvik03N2vYfCtuqa/YG9NFXg0VnB/iXnlT0zfETQ9LxXJqy7WCEjgouDgZXAgPL6/XHvZW1vNfLnfn9mawqCRFVMVqXSQntma418dPc3SBgnKT6hBSn7b/VtmhJ11FpEaL7PSSl2fAGz0hF15KSQNwIyEr77niMYKgcTCVI+9i8v/WULYJKl751URnMaC3H2eXlUugOpQ34qKOV037/h07m6OrMrpOxEgyjWmkjdzzyBs6qsiQ07Xk7Fb2HooRyMUECamBPC969v5qTiUU3TXb0Ec5ssxvjpaIig5iYpfn4DbCkFo8D80R75YUXByipcPezbvAY+yXZW/VnC2UT1JdB1iRVnyb3QzBic6q8QQHnteyYfGii/crPpkBXpzWzNHp+yxLO+f7eHq+rcJu3EU3JDZAw4fUUcjil8BHWKRzDzUKaTjBbZtb2mTStgkpOlUBbAgFwecnYGanTEAQnBQJN507Yc9A/U7gIkYtI2MApI0FM6RB51bSt7wer3KrocBDCHtzHInHYPe45/1qmxPaqw0BrCdUJjIZsCy/l1mhN9N1dYuyi7TdWwHvjUAW+F8ekvC9PZ1tMEKq/z2eybPz3XTtkLuy7w9JU0caTLXPe3Hs0Sa29HkqAuPJ2KyPcT3XZ5eBHi7QEFF2IcukusZdEhx15qH4OFjWQxrrqZX5oKrJFnmSaI5WNxnf1yKp0eVAZz8Pce5fXZHud1axwC8Tr2Lq/DyxbQt5efJB00Gr6YRayDfwSnqJbgTEOR0fvwCJy4AIhg/h1JigwBgtK64jAnopFKvNxxJouFkrveI8CiqaK12DoFwICqWiWye3kirhNemjZOXT4HJqh5EOfqO0spjuBCmSK8CD6kuWzTUemZweAq5Mb5qmmMkwKXaw/iRmnCbTpB9BGCy/+RqxfcvIOpkRj/IKDu3tRQ3Gw5ObkpGLg57qVlgufYMaxUy3qd/UEqAOpV9QQDimwOKEBn1GfP
  HOBBES_PAT:
    secure: FMSdnVu01kCl/h3wLYiJfrZh9g8XCScl5sT98lVFr8KakwD9C5Lsqs01fn4o7DwX7zu+voHMzTqJ+eE+eTP/j63LoH5DHq81hW2w0Rq6EOEXg1EAUolVHsVerSUAXzfpwnvRHzagS9pD6MX7/n7813lHo9vFL4lIZeqmc1oK/eFy4trd2cGfwbrgxFY2NZnzpzY2R9vVHTCiIJuDS33BuQ==
  PM_APIKEY:
    secure: ujCKbQHfvl9fiBouXlRQH9yn/EgkW5nFHauiPeNbSwu7eJm4Y0S4It0+6DVwM/CjxwTUKof64cXLgVzEBmnSi6JfqB2UZRMeY95HGSK/JOM=
  MASTER_KEY:
    secure: CiAPUpATu+acH602aFC2ow==
  # Disable Powershell on Linux machines
  APPVEYOR_YML_DISABLE_PS_LINUX: "true"
  # Changes ownership of minikube config dirs to running user
  CHANGE_MINIKUBE_NONE_USER: "true"
  # Set kubeconfig and minikube paths
  KUBECONFIG: "/home/appveyor/.kube/config"
  MINIKUBE_HOME: "/home/appveyor/kubernetes"
  # Disable prompts for CI
  MINIKUBE_WANTUPDATENOTIFICATION: "false"
  MINIKUBE_WANTREPORTERRORPROMPT: "false"

services:
  - docker
  
for:
  -
    branches:
      only:
        - master
    environment: 
      CONFIGURATION: Release
      BUILD_ENV: AppVeyor
    dotnet_csproj:
      patch: true
      file: '**\*.fsproj'
      version: '{version}'
      package_version: '{version}'
      assembly_version: '{version}'
      file_version: '{version}'
      informational_version: '{version}'
    install:
      - docker version
      - dotnet tool install --global fake-cli
      - dotnet tool install --global paket
      - curl -sL https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o kubectl
      - chmod +x kubectl
      - sudo mv kubectl /usr/local/bin/
      - echo "jens"
      - kubectl apply -k ./ -o jens.yaml
    before_build:
      - docker login -u="${DOCKER_USER}" -p="${DOCKER_PASS}" 
    build_script:  
      - fake build --parallel 16 --target PushApps
    deploy_script:
      - echo "Deploying"
      #should run kustomize for production and apply the configuration

  -
    branches:
      only:
        - development
    environment:
      GIT_ACCESS_TOKEN:
        secure: bYL40RWEXYSqfLLEOipwrMfkLLotoTB8T5B0QSPheafq7p9jbqdHVaa9SUn+GYff
      BUILD_ENV: AppVeyor
      CONFIGURATION: Debug
    install:
      #verify docker
      - docker version
      #install kubernetes tooling
      - curl -sL https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o kubectl
      - chmod +x kubectl
      - sudo mv kubectl /usr/local/bin/
      - npm install -s -g --unicode=false newman@4.6.1
      - curl -sL https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 -o minikube
      - chmod +x minikube
      - sudo mv minikube /usr/local/bin/
      - sudo apt install conntrack
      #install dotnet tools
      - dotnet tool install --global fake-cli
      - dotnet tool install --global paket

    before_build:
      - CHANGE_MINIKUBE_NONE_USER=true MINIKUBE_HOME=${MINIKUBE_HOME} 
      - minikube --driver=docker start
      - ip=$(minikube ip)
      - eval $(minikube docker-env) 
      - echo ${ENV_FILE} | kubectl apply -f -
      
      
    build_script:
      - docker login -u="${DOCKER_USER}" -p="${DOCKER_PASS}"
      - fake build --target buildfortest --parallel 8
      
    test_script:
      #- dotnet test
      - source functions.sh
      - ip=$(minikube ip)
      - start
      - awaitRunningState
      - kubectl port-forward service/hello-minikube 8080:80 &
      - kubectl port-forward service/hello-minikube 5984:5984 &
      - SERVER="http://localhost"
      - front_url="${SERVER}:8080"
      - curl ${front_url}/ping
      - curl "${SERVER}:5984"
      - docker build -t workbench tools/workbench && docker run -dt workbench development --host "${front_url}" --masterkey Rno8hcqr9rXXs
      - all
      #- logs conf -f
      - sync
      - sleep 60
      
      - NAME=$(kubectl get pods -l app=gateway -o name) 
        #- newman run https://api.getpostman.com/collections/4127812-d535bce5-ad9a-4346-acb4-311c8443c478?apikey=${PM_APIKEY} -e https://api.getpostman.com/environments/4127812-b0dfd968-9fc7-406b-b5a4-11bae0ed4b47?apikey=${PM_APIKEY} --env-var "front"=${front_url} --env-var "dburl"=${db_url} --env-var "collectordburl"=${db_url}
      - newman run https://api.getpostman.com/collections/7af4d823-d527-4bc8-88b0-d732c6243959?apikey=${PM_APIKEY} -e https://api.getpostman.com/environments/b0dfd968-9fc7-406b-b5a4-11bae0ed4b47?apikey=${PM_APIKEY} --env-var "ip"=${ip} --env-var "master_key"=${MASTER_KEY}
    
    deploy_script:
      - git config --global credential.helper store
      - git config --global user.email "hobbes_buildserver@kmd.dk"
      - git config --global user.name "Build server"
      - git remote add pseudo https://${GIT_ACCESS_TOKEN}:x-oauth-basic@github.com/r-d-kmd/hobbes.git
      - git checkout master
      - git merge development
      - git push pseudo master