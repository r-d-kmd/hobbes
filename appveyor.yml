version: 2.0.{build} 
image: 
  - Ubuntu

branches:
  only:
    - development
environment:
  BUILD_ENV: AppVeyor
  ENV_FILE:
    secure: 1EY0PW6l+4E/ZiuaRlC8WHb8v2J6o+YWksH852D5wIVfRnWBC6Ih6bPQMSwQ1Smm71oEOrsd8WJsabgdIkZIxinJ4chtLNBEjx2Wm32JuQziI+jvxc+Q+9YUtwrijB6xP2jHPA0n5wLEE1yHiicn6FFTFcXMJnOpizKcVkU9CgAywwJC+hXp17Vmp96jkfoDem7ZnOpSfUplJti7Vw55aHz4IkkP/G60d+9ak2cks3SHXE80y4ouOnULCZbr2JwekIbxOCJjgOBGeUu7X2hGNMd1u9z00M3iqyS6cwIwnlea5x8cGJrO2XYQ00PCUkzlmGjdeGN5S5In5e7T7VB2aSMJCZMcBS/zw4trIpgWtriFds2AZMPo2zdTk6A+16TL1tNKJJ17bs6IWtev2wP1uIKFSw5OIoIOocnzKdafhhHP5WFKXHpLeXSW8gqL9KRtv876UvF6mFvP/3vGQUIhlirPePvTk1LdWGi7cigm/m0d1AhOkkNFccD3EfofM5v12EYlTA3vwGtDHrmuBewyZnTvS2YriKkYf9V2+LuXV4qUQOf5qwiYlK0yjrF8qa/TVAjzL2sX4oi38wS95S1ncU9kqdiU4a8RKhpCv3CKYH8a2zFdjGaTLP4I0PALDhlmpLlWF+dw5hX6NgCf8MfE2u/zgMG25K115mlZfF2H2KvV17HjpqXH5ItcRTCROGCGds1fqIbgvYlFYH3K8EHX3xbxGMgUVxDqatcOyb7dbj0AIR9IjEMftoT+NlkXJoWEorLRatsVm+9MIVfY/d8+dzK0mR1kQxq8jM4QmnXN1d+RhhgEPKFteiom4uhjUTIF2wdVlAeNmn1oHdn24o0zAF3yc3Yqigk19ZKWi0eXEK8ylShA0+Xt3ysKVRQRSLjNfmaEasurSdCGw/8Khiif2eb+HOS+HaAjxaVsRjVce70MAgIoCPkK3LM0sXnsxkdDKmD6kw2CGqVglikW4m8U9CeX2NqM4kyk3KIseR9eXc6UXYQ71k817FmWMeUfzh/HEzm447aOWdJJhfQ4DEOyFq7zrrkNNIpMI0zEmw6CGKigDmU6eDAdGzREjhdZk3mWeCFiaJYSbwzRckkYQmaPYw==
  DOCKER_USER:
    secure: CbwbpNPxLV9AwhjSpIz7LA==
  DOCKER_PASS:
    secure: /T9ITfudL23Ga+Mz7oRaVA==
  WORKBENCH_ENVIRONMENT:
    secure: /0UAqpwPkUwhtSS6lpKMBHZ8ljEtyTr5h3VPFqsliGLsVg8u/WLCPcwPpJOm1xpglFrEuY5lQc9ekyZ4BS6PB3rL5hfhvI1+T0zD9EMIaN+1Uo9AGU3Dc6PFzeaxT3oZBBRgzdsHeOaicVhgai6xOexBtPEZzWfXDYtxjOfybV4BmFA/hk7u7RCnkRodG6z2IiCUmXYIQbxOLyKDfbVOUVbqnYlPoYdzcZY95h2yyvik03N2vYfCtuqa/YG9NFXg0VnB/iXnlT0zfETQ9LxXJqy7WCEjgouDgZXAgPL6/XHvZW1vNfLnfn9mawqCRFVMVqXSQntma418dPc3SBgnKT6hBSn7b/VtmhJ11FpEaL7PSSl2fAGz0hF15KSQNwIyEr77niMYKgcTCVI+9i8v/WULYJKl751URnMaC3H2eXlUugOpQ34qKOV037/h07m6OrMrpOxEgyjWmkjdzzyBs6qsiQ07Xk7Fb2HooRyMUECamBPC969v5qTiUU3TXb0Ec5ssxvjpaIig5iYpfn4DbCkFo8D80R75YUXByipcPezbvAY+yXZW/VnC2UT1JdB1iRVnyb3QzBic6q8QQHnteyYfGii/crPpkBXpzWzNHp+yxLO+f7eHq+rcJu3EU3JDZAw4fUUcjil8BHWKRzDzUKaTjBbZtb2mTStgkpOlUBbAgFwecnYGanTEAQnBQJN507Yc9A/U7gIkYtI2MApI0FM6RB51bSt7wer3KrocBDCHtzHInHYPe45/1qmxPaqw0BrCdUJjIZsCy/l1mhN9N1dYuyi7TdWwHvjUAW+F8ekvC9PZ1tMEKq/z2eybPz3XTtkLuy7w9JU0caTLXPe3Hs0Sa29HkqAuPJ2KyPcT3XZ5eBHi7QEFF2IcukusZdEhx15qH4OFjWQxrrqZX5oKrJFnmSaI5WNxnf1yKp0eVAZz8Pce5fXZHud1axwC8Tr2Lq/DyxbQt5efJB00Gr6YRayDfwSnqJbgTEOR0fvwCJy4AIhg/h1JigwBgtK64jAnopFKvNxxJouFkrveI8CiqaK12DoFwICqWiWye3kirhNemjZOXT4HJqh5EOfqO0spjuBCmSK8CD6kuWzTUemZweAq5Mb5qmmMkwKXaw/iRmnCbTpB9BGCy/+RqxfcvIOpkRj/IKDu3tRQ3Gw5ObkpGLg57qVlgufYMaxUy3qd/UEqAOpV9QQDimwOKEBn1GfP
  HOBBES_PAT:
    secure: FMSdnVu01kCl/h3wLYiJfrZh9g8XCScl5sT98lVFr8KakwD9C5Lsqs01fn4o7DwX7zu+voHMzTqJ+eE+eTP/j63LoH5DHq81hW2w0Rq6EOEXg1EAUolVHsVerSUAXzfpwnvRHzagS9pD6MX7/n7813lHo9vFL4lIZeqmc1oK/eFy4trd2cGfwbrgxFY2NZnzpzY2R9vVHTCiIJuDS33BuQ==
  PM_APIKEY:
    secure: ujCKbQHfvl9fiBouXlRQH9yn/EgkW5nFHauiPeNbSwu7eJm4Y0S4It0+6DVwM/CjxwTUKof64cXLgVzEBmnSi6JfqB2UZRMeY95HGSK/JOM=
  MASTER_KEY:
    secure: CiAPUpATu+acH602aFC2ow==
  # Disable Powershell on Linux machines
  APPVEYOR_YML_DISABLE_PS_LINUX: "true"
  # Changes ownership of minikube config dirs to running user
  CHANGE_MINIKUBE_NONE_USER: "true"
  # Set kubeconfig and minikube paths
  KUBECONFIG: "/home/appveyor/.kube/config"
  MINIKUBE_HOME: "/home/appveyor/kubernetes"
  # Disable prompts for CI
  MINIKUBE_WANTUPDATENOTIFICATION: "false"
  MINIKUBE_WANTREPORTERRORPROMPT: "false"
  CONFIGURATION: Debug

services:
  - docker
  
for:
  -
    branches:
      only:
        - master
    environment: 
      CONFIGURATION: Release
    dotnet_csproj:
      patch: true
      file: '**\*.fsproj'
      version: '{version}'
      package_version: '{version}'
      assembly_version: '{version}'
      file_version: '{version}'
      informational_version: '{version}'
    install:
      - docker version
      - dotnet tool install --global fake-cli
      - dotnet tool install --global paket
      - curl -sL https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o kubectl
      - chmod +x kubectl
      - sudo mv kubectl /usr/local/bin/
    before_build:
      - docker login -u="${DOCKER_USER}" -p="${DOCKER_PASS}" 
    build_script:  
      - fake build --parallel 16 --target PushAllApps
    deploy_script:
      - echo "Deploying"
      #should run kustomize for production and apply the configuration

  -
    branches:
      only:
        - development
    environment:
      GIT_ACCESS_TOKEN:
        secure: bYL40RWEXYSqfLLEOipwrMfkLLotoTB8T5B0QSPheafq7p9jbqdHVaa9SUn+GYff
    install:
      - curl -fsSL -o install_kustomize.sh "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"
      - chmod 700 install_kustomize.sh
      - ./install_kustomize.sh
      - docker version
      - dotnet tool install --global fake-cli
      - dotnet tool install --global paket
      - curl -sL https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o kubectl
      - chmod +x kubectl
      - sudo mv kubectl /usr/local/bin/
      - npm install -s -g --unicode=false newman@4.6.1
      - curl -sL https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 -o minikube
      - chmod +x minikube
      - sudo mv minikube /usr/local/bin/
      - sudo apt install conntrack
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh

    before_build:
      - sudo CHANGE_MINIKUBE_NONE_USER=true MINIKUBE_HOME=${MINIKUBE_HOME} minikube start --vm-driver=none
      - eval $(minikube docker-env) 
      - echo ${ENV_FILE} | kubectl apply -f -
      

    build_script:
      - docker login -u="${DOCKER_USER}" -p="${DOCKER_PASS}" 
      - fake build --parallel 16 --target Rebuild
      
    test_script:
      #- dotnet test
      - source functions.sh
      - export APP=(configurations gateway uniformdata azuredevops calculator syncronization db)
      - start
      - awaitRunningState
      - front_url=$(minikube ip)":30080"
      - db_url=$(minikube ip)":30084"
      - curl http://${front_url}/ping
      - NAME=$(kubectl get pods -l app=gateway -o name) 
      - newman run https://api.getpostman.com/collections/4127812-d535bce5-ad9a-4346-acb4-311c8443c478?apikey=${PM_APIKEY} -e https://api.getpostman.com/environments/4127812-b0dfd968-9fc7-406b-b5a4-11bae0ed4b47?apikey=${PM_APIKEY} --env-var "front"=${front_url} --env-var "dburl"=${db_url} --env-var "collectordburl"=${db_url}
      - newman run https://api.getpostman.com/collections/9463780-a7355a7a-5fe6-42b5-a1ed-877f3c9bc2f7?apikey=${PM_APIKEY} -e https://api.getpostman.com/environments/4127812-b0dfd968-9fc7-406b-b5a4-11bae0ed4b47?apikey=${PM_APIKEY} --env-var "front"=${front_url} --env-var "dburl"=${db_url} --env-var "collectordburl"=${db_url} --env-var "pat"=${MASTER_KEY}
    
    deploy_script:
      - git config --global credential.helper store
      - git config --global user.email "hobbes_buildserver@kmd.dk"
      - git config --global user.name "Build server"
      - git remote add pseudo https://${GIT_ACCESS_TOKEN}:x-oauth-basic@github.com/r-d-kmd/hobbes.git
      - git checkout master
      - git merge development
      - git push pseudo master