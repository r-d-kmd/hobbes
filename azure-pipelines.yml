# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- development

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: newman --version
  displayName: Verify newman version

- script: dotnet tool update fake-cli
  displayName: Install Fake
  
- task: NuGetToolInstaller@1
- script: echo "$(ENV_FILE)"

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription: 'Flowerpot(6df631a2-f66b-4e70-8f3c-4630dca28cbf)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az acr login --name hobbes'

# Download Minikube and it's prerequisites
- script: sudo apt-get install conntrack && set -e && export CHANGE_MINIKUBE_NONE_USER=true && sudo mount --make-rshared /
  displayName: Minikube prerequisites  

- script: curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  displayName: Downloading Minikube

- script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
  displayName: Docker login

#- script: docker login https://docker.pkg.github.com -u="$GIT_USER" -p="$GIT_PASS"
- script: docker pull gcr.io/k8s-minikube/kicbase:v0.0.11
  displayName: Pull minikube image

# Start Minikube
- script: minikube start --driver docker --base-image gcr.io/k8s-minikube/kicbase:v0.0.11
  displayName: Start Minikube

# Fix permissions issue in AzurePipelines
- script: sudo chmod --recursive 777 $HOME/.minikube && sudo chmod --recursive 777 $HOME/.kube && minikube update-context
  displayName: Fix permissions

# Set up cluster
- script: echo "$(ENV_FILE)" | kubectl apply -f -
  displayName: Apply kubernetes environment file
  
- script: |
      source functions.sh 
      build sdk
  env:
     FEED_PAT: $(FEED_PAT)
  displayName: Build SDK

- script: |
      docker push hobbes.azurecr.io/sdk
  displayName: Push SDK

- script: build PushPackages
  displayName: Push Packages


- script: |
      build BuildForTest 8
  env:
     FEED_PAT: $(FEED_PAT)
  displayName: Build the world

- script: |
    source functions.sh
    start
    setupTest
  displayName: Setup tests

- script: |
    printf "${NoColor}"
    source functions.sh
    kubectl logs job/publish
    kubectl logs job/sync
    printf "${Green}"
    logs az
    printf "${Blue}"
    logs calc
    printf "${NoCOlor}"
    kubectl port-forward service/gateway-svc 30080:80 &
    newman run https://api.getpostman.com/collections/7af4d823-d527-4bc8-88b0-d732c6243959?apikey=$(PM_APIKEY) -e https://api.getpostman.com/environments/b0dfd968-9fc7-406b-b5a4-11bae0ed4b47?apikey=$(PM_APIKEY) --env-var "ip"=$(minikube ip) --env-var "master_key"=$(MASTER_KEY)
    kubectl logs service/gateway-svc
  displayName: Run postman tests

- script: |
    docker push kmdrd/workbench
    git config --global credential.helper store
    git config --global user.email "hobbes_buildserver@kmd.dk"
    git config --global user.name "Build server"
    echo "azure-pipelines.yml merge=ours" > .gitattributes
    git config --global merge.ours.driver true
    git remote add pseudo https://$(GIT_ACCESS_TOKEN):x-oauth-basic@github.com/r-d-kmd/hobbes.git
    git checkout master
    git merge origin/development
    git push pseudo master
  displayName: Push to master
