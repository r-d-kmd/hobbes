# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- development

pool:
  vmImage: 'ubuntu-latest'
stages: 
  - stage: development
    jobs:
      - job: development
        steps:
        
        - script: dotnet tool update fake-cli
          displayName: Install Fake
          
        - task: NuGetToolInstaller@1

        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'

        - task: KubectlInstaller@0
          inputs:
            kubectlVersion: 'latest'

        - task: AzureCLI@2
          displayName: Azure CLI
          inputs:
            azureSubscription: 'Flowerpot(6df631a2-f66b-4e70-8f3c-4630dca28cbf)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'az acr login --name hobbes'

        # Download Minikube and it's prerequisites
        - script: sudo apt-get install conntrack && set -e && export CHANGE_MINIKUBE_NONE_USER=true && sudo mount --make-rshared /
          displayName: Minikube prerequisites  

        - script: curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
          displayName: Downloading Minikube

        - script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
          displayName: Docker login

        #- script: docker login https://docker.pkg.github.com -u="$GIT_USER" -p="$GIT_PASS"
        - script: docker pull gcr.io/k8s-minikube/kicbase:v0.0.11
          displayName: Pull minikube image

        # Start Minikube
        - script: |
            minikube start --driver docker --base-image gcr.io/k8s-minikube/kicbase:v0.0.11
          displayName: Start Minikube
        
        # Fix permissions issue in AzurePipelines
        - script: sudo chmod --recursive 777 $HOME/.minikube && sudo chmod --recursive 777 $HOME/.kube && minikube update-context
          displayName: Fix permissions

        # Set up cluster
        - script: echo '$(ENV_FILE)' | kubectl apply -f -
          displayName: Apply kubernetes environment file

        - script: |
            cd tests/
            source ../functions.sh
            eval $(minikube docker-env)
            docker build -t tester --build-arg ENV_FILE="$(echo $ENV_FILE | tr "\"" "\\\"")" .
            wrap "ping"
          env:
            ENV_FILE: "$(ENV_FILE)"
          displayName: Build tester image

        - script: |
            eval $(minikube docker-env)
            dotnet fake build --parallel 4
          env:
            ENV_FILE: "$(ENV_FILE)"
          displayName: Build the world
        - script: |
            eval $(minikube docker-env)
            dotnet fake build --target deploy
            sleep 10
            kubectl get all
          env:
            ENV_FILE: "$(ENV_FILE)"
          displayName: Deploy services to minikube
        - script: |            
            cd tests/
            eval $(minikube docker-env)
            source ../functions.sh
            test
          displayName: Integration tests
          env:
            ENV_FILE: "$(ENV_FILE)"
            
        - script: |
            git config --global credential.helper store
            git config --global user.email "hobbes_buildserver@kmd.dk"
            git config --global user.name "Build server"
            echo "azure-pipelines.yml merge=ours" > .gitattributes
            git config --global merge.ours.driver true
            git remote add pseudo https://$(GIT_ACCESS_TOKEN):x-oauth-basic@github.com/r-d-kmd/hobbes.git
            git checkout master
            git merge origin/development
            RESULT = $?
            if [ "$RESULT" - eq "0" ]
            then
                git push pseudo master
            else
              exit $RESULT
            fi
          displayName: Push to master
