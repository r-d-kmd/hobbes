# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NuGetToolInstaller@1

- script: echo "$(ENV_FILE)"

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- script: wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && sudo dpkg -i packages-microsoft-prod.deb
- script: sudo apt-get update; \ sudo apt-get install -y apt-transport-https && \ sudo apt-get update && \ sudo apt-get install -y dotnet-sdk-3.1
- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

- task: Npm@1
  inputs:
    command: 'install'

- script: npm install -s -g --unicode=false newman@4.6.1
  displayName: install Newman

# Download Minikube and it's prerequisites
- script: sudo apt-get install conntrack && set -e && export CHANGE_MINIKUBE_NONE_USER=true && sudo mount --make-rshared /
  displayName: Minikube prerequisites  

- script: curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  displayName: Downloading Minikube

# Start Minikube
- script: sudo minikube --driver=docker start
#--vm-driver=none --bootstrapper=kubeadm --kubernetes-version=v1.18.0
  displayName: Start Minikube

# Fix permissions issue in AzurePipelines
- script: sudo chmod --recursive 777 $HOME/.minikube && sudo chmod --recursive 777 $HOME/.kube && minikube update-context
  displayName: Fix permissions

# Set up cluster
- script: ip=$(minikube ip)
  displayName: Save Minikube ip
- script: eval $(minikube docker-env)
  displayName: Set build environment inside Cluster
- script: echo "$(ENV_FILE)" | kubectl apply -f -
  displayName: Apply kubernetes environment file
  
- script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
  displayName: Docker login

- task: FAKE5@1
  inputs:
    FakeVersion: '5.20.2'
    FakeScript: 'build.fsx'

- script: source functions.sh
  displayName: Source functions.sh

- script: setupTest
  displayName: setupTest

- script: test
  displayName: test

