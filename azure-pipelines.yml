  # ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  - development
  
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Npm@1
  inputs:
    command: 'install'

- script: sudo npm install -s -g --unicode=false newman@4.6.1
  displayName: Install newman

- script: newman --version
  displayName: Verify newman version

- script: dotnet tool install fake-cli
  displayName: Install Fake
  
- task: NuGetToolInstaller@1

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

# Download Minikube and it's prerequisites
- script: sudo apt-get install conntrack && set -e && export CHANGE_MINIKUBE_NONE_USER=true && sudo mount --make-rshared /
  displayName: Minikube prerequisites  

- script: curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  displayName: Downloading Minikube

- script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
  displayName: Docker login

#- script: docker login https://docker.pkg.github.com -u="$GIT_USER" -p="$GIT_PASS"
- script: docker pull gcr.io/k8s-minikube/kicbase:v0.0.11
  displayName: Pull minikube image

# Start Minikube
- script: minikube start --driver=docker --memory=4gb
  displayName: Start Minikube

# Fix permissions issue in AzurePipelines
- script: sudo chmod --recursive 777 $HOME/.minikube && sudo chmod --recursive 777 $HOME/.kube && minikube update-context
  displayName: Fix permissions issue in AzurePipelines

# Set up cluster
- script: echo "$(ENV_FILE)" | kubectl apply -f -
  displayName: Setup cluster
  
- script: source functions.sh && build buildfortest 8 && docker images
  displayName: Build the world

- script: |
    source functions.sh
    start
    sleep 3
    printf "${Purple}Publishing transformations and configurations\n"
    publish
    NAME="pod/$(getName publish)"
    kubectl wait --for=condition=ready ${NAME} --timeout=120s
    printf "${Purple}Publishing\n"
    kubectl logs ${NAME} -f &
    kubectl wait --for=condition=completed ${NAME} --timeout=120s
    printf "Published${NoColor}\n"
    kubectl describe ${NAME}
    kubectl config get-contexts
    kubectl config use-context minikube
    kubectl get all
    printf "${Cyan}Sync\n"
    sync
    printf "${Cyan}Syncing${NoColor}\n"
          
  displayName: Setup tests

- script: |
    kubectl port-forward service/gateway-svc 30080:80 &
    sleep 120
    source functions.sh
    printf "${Purple}"
    logs azure
    printf "${Cyan}"
    logs git
    printf "${Green}"
    logs calc
    printf "${Yellow}"
    logs sync
    printf "${Blue}"
    logs conf
    printf "${NoColor}"
    newman run https://api.getpostman.com/collections/7af4d823-d527-4bc8-88b0-d732c6243959?apikey=$(PM_APIKEY) -e https://api.getpostman.com/environments/b0dfd968-9fc7-406b-b5a4-11bae0ed4b47?apikey=$(PM_APIKEY) --env-var "ip"=$(minikube ip) --env-var "master_key"=$(MASTER_KEY)
  displayName: Run postman tests

- script: git config --global credential.helper store &&
          git config --global user.email "hobbes_buildserver@kmd.dk" &&
          git config --global user.name "Build server" &&
          echo "azure-pipelines.yml merge=ours" > .gitattributes &&
          git config --global merge.ours.driver true &&
          git remote add pseudo https://$(GIT_ACCESS_TOKEN):x-oauth-basic@github.com/r-d-kmd/hobbes.git &&
          git checkout master &&
          git merge origin/development &&
          git push pseudo master
  displayName: Push to master