  # ASP.NET

# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:

  vmImage: 'ubuntu-latest'

steps:
- task: GoTool@0
  inputs:
    version: '1.10'

- script: dotnet tool install fake-cli
  displayName: Install Fake

- script: GOBIN=$(pwd)/ GO111MODULE=on go get sigs.k8s.io/kustomize/kustomize/v3
# Need go 1.13 or higher
- script: unset GOPATH
# see https://golang.org/doc/go1.13#modules
- script: unset GO111MODULES

# clone the repo
- script: git clone git@github.com:kubernetes-sigs/kustomize.git
# get into the repo root
- script: cd kustomize

# Optionally checkout a particular tag if you don't
# want to build at head
- script: git checkout kustomize/v3.2.3

# build the binary
- script: (cd kustomize; go install .)

# run it
- script: ~/go/bin/kustomize version
  
- task: NuGetToolInstaller@1
- script: echo "$(ENV_FILE)"

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

# Download Minikube and it's prerequisites
- script: sudo apt-get install conntrack && set -e && export CHANGE_MINIKUBE_NONE_USER=true && sudo mount --make-rshared /
  displayName: Minikube prerequisites  

- script: curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  displayName: Downloading Minikube

- script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
  displayName: Docker login

- script: docker pull gcr.io/k8s-minikube/kicbase:v0.0.11
  displayName: Pull minikube image

# Start Minikube
- script: minikube start --driver docker --base-image gcr.io/k8s-minikube/kicbase:v0.0.11
  displayName: Start Minikube

# Fix permissions issue in AzurePipelines
- script: sudo chmod --recursive 777 $HOME/.minikube && sudo chmod --recursive 777 $HOME/.kube && minikube update-context
  displayName: Fix permissions

# Set up cluster
- script: echo "$(ENV_FILE)" | kubectl apply -f -
  displayName: Apply kubernetes environment file
  
#- script: eval $(SHELL=/bin/bash minikube -p minikube docker-env) && dotnet fake build && docker images
#  displayName: Build the world

- script: source functions.sh && applyProductionYaml
  displayName: Setup production yaml

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Flowerpot(6df631a2-f66b-4e70-8f3c-4630dca28cbf)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az aks get-credentials --name hobbes-kub --resource-group hobbes-rg && 
                   kubectl get all &&
                   cd kubernetes &&
                   ls &&
                   kubectl apply -f test.yaml'

