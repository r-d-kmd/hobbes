apiVersion: v1
data:
  AZURE_TOKEN_KMDDK: eTdianEzc2tyNWF1ZXRneTNkcmFkaWxydHNuaW1pc3FrNmJ1NGU2b292aXM1ZWJlbXJmcQo=
  AZURE_TOKEN_TIME_PAYROLL_KMDDK: aWdqZjNnNnY0bmdxMjI3cm51b3JmM3o3YnJqbG81eWVrcmIyaWpweXd1enVqNm1yczVrYQo=
  COUCHDB_PASSWORD: cGFzc3dvcmQK
  COUCHDB_USER: YWRtaW4K
  KEY_SUFFIX: MjgwNGRlNjdiYTY5NzljNzU2ZTg3NTllNDRmZTQK
  MASTER_USER: Um5vOGhjcXI5clhYcwo=
  RABBIT_HOST: dGVzdC1yYWJiaXRtcQo=
  RABBIT_PASSWORD: Z3Vlc3Q=
  RABBIT_PORT: NTY3Mg==
  RABBIT_USER: Z3Vlc3Q=
  SERVER_PORT: ODA4NQo=
kind: Secret
metadata:
  name: env
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: configurations-svc
spec:
  ports:
  - nodePort: 30093
    port: 8085
    targetPort: 8085
  selector:
    app: configurations
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: db-svc
spec:
  ports:
  - name: "5984"
    nodePort: 30084
    port: 5984
    targetPort: 5984
  selector:
    app: db
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-svc
spec:
  ports:
  - nodePort: 30080
    port: 80
    targetPort: 8085
  selector:
    app: gateway
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: test
    meta.helm.sh/release-namespace: default
  creationTimestamp: null
  labels:
    app: rabbitmq
    app.kubernetes.io/managed-by: Helm
    chart: rabbitmq-6.26.0
    heritage: Helm
    release: test
  name: test-rabbitmq-headless
  selfLink: /api/v1/namespaces/default/services/test-rabbitmq-headless
spec:
  clusterIP: None
  ports:
  - name: epmd
    port: 4369
    protocol: TCP
    targetPort: epmd
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
  - name: dist
    port: 25672
    protocol: TCP
    targetPort: dist
  - name: stats
    port: 15672
    protocol: TCP
    targetPort: stats
  selector:
    app: rabbitmq
    release: test
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: test
    meta.helm.sh/release-namespace: default
  creationTimestamp: null
  labels:
    app: rabbitmq
    app.kubernetes.io/managed-by: Helm
    chart: rabbitmq-6.26.0
    heritage: Helm
    release: test
  name: test-rabbitmq
  selfLink: /api/v1/namespaces/default/services/test-rabbitmq
spec:
  ports:
  - name: epmd
    port: 4369
    protocol: TCP
    targetPort: epmd
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
  - name: dist
    port: 25672
    protocol: TCP
    targetPort: dist
  - name: stats
    port: 15672
    protocol: TCP
    targetPort: stats
  selector:
    app: rabbitmq
    release: test
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: uniformdata-svc
spec:
  ports:
  - nodePort: 30089
    port: 8085
    targetPort: 8085
  selector:
    app: uniformdata
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azuredevops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azuredevops
  template:
    metadata:
      labels:
        app: azuredevops
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: env
        image: azuredevops
        imagePullPolicy: Never
        name: hobbes-azuredevops
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calculator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calculator
  template:
    metadata:
      labels:
        app: calculator
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: env
        image: calculator
        imagePullPolicy: Never
        name: hobbes-calculator
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configurations
spec:
  replicas: 1
  selector:
    matchLabels:
      app: configurations
  template:
    metadata:
      labels:
        app: configurations
    spec:
      containers:
      - env: null
        envFrom:
        - secretRef:
            name: env
        image: configurations
        imagePullPolicy: Never
        name: hobbes-configurations
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - env:
        - name: COUCHDB_PASSWORD
          value: password
        - name: COUCHDB_USER
          value: admin
        image: kmdrd/couchdb
        imagePullPolicy: Always
        name: db
        ports:
        - containerPort: 5984
        volumeMounts:
        - mountPath: /opt/couchdb/data
          name: db-storage
      restartPolicy: Always
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: db-volume-claim
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: env
        image: gateway
        imagePullPolicy: Never
        name: gateway
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: git
spec:
  replicas: 1
  selector:
    matchLabels:
      app: git
  template:
    metadata:
      labels:
        app: git
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: env
        image: git
        imagePullPolicy: Never
        name: hobbes-git
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uniformdata
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uniformdata
  template:
    metadata:
      labels:
        app: uniformdata
    spec:
      containers:
      - env: null
        envFrom:
        - secretRef:
            name: env
        image: uniformdata
        imagePullPolicy: Never
        name: hobbes-uniformdata
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    volume: db-volume
  name: db-volume
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 3Gi
  hostPath:
    path: data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-volume-claim
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
  selector:
    matchLabels:
      volume: db-volume
  storageClassName: standard
